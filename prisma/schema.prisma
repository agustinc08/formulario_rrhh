generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Formulario {
  id           Int           @id @default(autoincrement())
  nombre       String
  preguntas    Pregunta[]
  dependencias Dependencia[] @relation("FormularioDependencia")
  respuestas   Respuesta[]
  secciones    Seccion[]
  inicio       Inicio?       @relation(fields: [inicioId], references: [id])
  inicioId     Int?
  estaActivo Boolean
}

model Inicio {
  id                      Int         @id @default(autoincrement())
  tituloPrincipal         String
  introduccionDescripcion String?
  objetivoDescripcion     String?
  parrafo                 String?
  formulario              Formulario[]
}

model Seccion {
  id          Int        @id @default(autoincrement())
  descripcion String
  preguntas   Pregunta[]
  formulario  Formulario @relation(fields: [formularioId], references: [id])
  formularioId Int
}

model Pregunta {
  id                    Int         @id @default(autoincrement())
  descripcion           String
  tieneComentario       Boolean     @default(false)
  descripcionComentario String?
  tieneExpresion        Boolean     @default(false)
  tieneCalificaciones   Boolean     @default(false)
  tieneClasificaciones  Boolean     @default(false)
  tieneGrado            Boolean     @default(false)
  respuestas            Respuesta[]
  seccion               Seccion?    @relation(fields: [seccionId], references: [id])
  seccionId             Int?
  comentarios           Comentario[]
  formulario            Formulario  @relation(fields: [formularioId], references: [id])
  formularioId          Int
}

model Respuesta {
  id              Int                         @id @default(autoincrement())
  createdAt       DateTime                    @default(now())
  dependenciaId   Int
  dependencia     Dependencia                 @relation(fields: [dependenciaId], references: [id])
  edad            Edad
  genero          Genero
  expresion       RespuestaExpresionEnum?
  calificaciones  RespuestaCalificacionEnum?
  clasificaciones RespuestaClasificacionEnum?
  grado           RespuestaGradoEnum?
  pregunta        Pregunta                    @relation(fields: [preguntaId], references: [id])
  preguntaId      Int
  comentarios     Comentario[]
  formularioId    Int
  formulario      Formulario                 @relation(fields: [formularioId], references: [id])
}

model Comentario {
  id              Int         @id @default(autoincrement())
  descripcion     String?
  comentario      String
  preguntaId      Int?
  pregunta        Pregunta?   @relation(fields: [preguntaId], references: [id])
  respuestaId     Int?
  respuesta       Respuesta?  @relation(fields: [respuestaId], references: [id])
  dependencia     Dependencia @relation(fields: [dependenciaId], references: [id])
  dependenciaId   Int
}

model Dependencia {
  id                Int          @id @default(autoincrement())
  nombreDependencia String
  respuestas        Respuesta[]
  claves            Clave[]
  comentarios       Comentario[]
  formularios       Formulario[] @relation("FormularioDependencia")
  rol               Rol          @default(dependencia)
}

model Clave {
  id            Int         @id @default(autoincrement())
  dependenciaId Int
  dependencia   Dependencia @relation(fields: [dependenciaId], references: [id])
  clave         String
}

enum Genero {
  MASCULINO
  FEMENINO
  OTRO
}

enum Edad {
  DESDE_18_A_45
  MAS_45
}

enum RespuestaExpresionEnum {
  SI
  NO
  NO_SE
}

enum RespuestaGradoEnum {
  ALTA
  MEDIA
  BAJA
}

enum RespuestaClasificacionEnum {
  SIEMPRE
  CASI_SIEMPRE
  AVECES
  CASI_NUNCA
  NUNCA
}

enum RespuestaCalificacionEnum {
  BUENO
  MUY_BUENO
  REGULAR
  MALO
  MUY_MALO
}

enum Rol {
  dependencia
  admin
}
