generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Formulario {
  id             Int             @id @default(autoincrement())
  nombre         String
  preguntas      Pregunta[]
  respuestas     Respuesta[]
  comentarios    Comentario[]
  tiposPregunta  TipoPregunta[]
  tiposRespuesta TipoRespuesta[]
  estaActivo     Boolean?
  inicio         Inicio[]
  dependencias   Dependencia[]
  secciones      Seccion[]
}

model Dependencia {
  id                Int          @id @default(autoincrement())
  nombreDependencia String
  respuestas        Respuesta[]
  claves            Clave[]
  comentarios       Comentario[]
  formularios       Formulario[]
  rol               Rol          @default(dependencia)
  polo              Polo
  edificio          Edificio
}

model Clave {
  id            Int         @id @default(autoincrement())
  dependenciaId Int
  dependencia   Dependencia @relation(fields: [dependenciaId], references: [id])
  clave         String
}

model Inicio {
  id                      Int          @id @default(autoincrement())
  tituloPrincipal         String
  introduccionDescripcion String?
  objetivoDescripcion     String?
  parrafo                 String?
  formulario              Formulario?  @relation(fields: [formularioId], references: [id])
  formularioId            Int?
}

model Seccion {
  id           Int        @id @default(autoincrement())
  descripcion  String
  preguntas    Pregunta[]
  formulario   Formulario @relation(fields: [formularioId], references: [id])
  formularioId Int
}

model Pregunta {
  id                    Int            @id @default(autoincrement())
  descripcion           String
  descripcionComentario String?
  tieneComentario       Boolean        @default(false)
  tieneTipoPregunta     Boolean        @default(false)
  tipoPregunta          TipoPregunta?  @relation(fields: [tipoPreguntaId], references: [id])
  tipoPreguntaId        Int?
  tipoRespuesta         TipoRespuesta? @relation(fields: [tipoRespuestaId], references: [id])
  tipoRespuestaId       Int?
  seccion               Seccion?       @relation(fields: [seccionId], references: [id])
  seccionId             Int?
  comentario            Comentario?    @relation(fields: [comentarioId], references: [id])
  comentarioId          Int?
  formulario            Formulario     @relation(fields: [formularioId], references: [id])
  formularioId          Int
  respuestas            Respuesta[]
}

model Respuesta {
  id              Int           @id @default(autoincrement())
  createdAt       DateTime      @default(now())
  pregunta        Pregunta      @relation(fields: [preguntaId], references: [id])
  preguntaId      Int
  comentario      Comentario?   @relation(fields: [comentarioId], references: [id])
  comentarioId    Int?
  formulario      Formulario    @relation(fields: [formularioId], references: [id])
  formularioId    Int
  tipoRespuesta   TipoRespuesta? @relation(fields: [tipoRespuestaId], references: [id])
  tipoRespuestaId Int?
  dependencia     Dependencia   @relation(fields: [dependenciaId], references: [id])
  dependenciaId   Int
  edad            Edad?
  genero          Genero?
}

model Comentario {
  id            Int         @id @default(autoincrement())
  descripcion   String?
  respuestaComentario    String?
  pregunta      Pregunta[]
  respuesta     Respuesta[]
  dependencia   Dependencia @relation(fields: [dependenciaId], references: [id])
  dependenciaId Int
  formulario    Formulario? @relation(fields: [formularioId], references: [id])
  formularioId  Int?
}

model TipoPregunta {
  id            Int             @id @default(autoincrement())
  descripcion   String
  formulario    Formulario      @relation(fields: [formularioId], references: [id])
  formularioId  Int
  preguntas     Pregunta[]
  tipoRespuesta TipoRespuesta[]
}

model TipoRespuesta {
  id             Int          @id @default(autoincrement())
  descripcion    String
  tipoPregunta   TipoPregunta @relation(fields: [tipoPreguntaId], references: [id])
  tipoPreguntaId Int
  preguntas      Pregunta[]
  formulario     Formulario   @relation(fields: [formularioId], references: [id])
  formularioId   Int
  respuestas     Respuesta[]
}

enum Genero {
  MASCULINO
  FEMENINO
  OTRO
}

enum Polo {
  LAVALLE
  INMIGRANTES
}

enum Edificio{
  Lavalle_1220
  Lalalle_1212
  Talcahuano_790
  Talcahuano_490
  Uruguay_714
  CarlosPelegrini_algo
  Inmigrantes_algo
}

enum Edad {
  DESDE_18_A_45
  MAS_45
}

enum Rol {
  dependencia
  usuario
  admin
}
